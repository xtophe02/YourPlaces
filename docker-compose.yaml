version: '3.4'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    # depends_on:
    #   - api
    volumes:
      - /app/node_modules
      - ./frontend/:/app/:delegated
    # networks:
    #   - mongo-dev-net
    # environment:
    #   database__client: mysql
    #   database__connection__host: db
    #   database__connection__user: root
    #   database__connection__password: YOURDBPASSWORDhere
    #   database__connection__database: ghost

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - 4000:4000
    depends_on:
      - mongo1
      # - mongo2
      # - mongo3
    volumes:
      - /app/node_modules
      - ./backend/:/app/:delegated
    # networks:
    #   - mongo-dev-net
  mongo1:
    image: mongo:4
    volumes:
      #GOOD: created a named volume so our data is kept between docker-compose ups
      - mongo1:/data/db
    # networks:
    #   - mongo-dev-net
    ports:
      - "30001:27017"
    # expose:
    #   - 27017
    # command: --quiet
    command: mongod --port 30001
    # command: mongod --smallfiles --logpath=/dev/null # --quiet
    # entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "devrs" ]
  # mongo2:
  #   image: mongo:4
  #   volumes:
  #     #GOOD: created a named volume so our data is kept between docker-compose ups
  #     - mongo2:/data/db
  #   # networks:
  #   #   - mongo-dev-net
  #   ports:
  #     - "30002:27017"
  #   command: mongod --port 30002
  #   # command: mongod --smallfiles --logpath=/dev/null # --quiet
  #   entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "devrs" ]
  # mongo3:
  #   image: mongo:4
  #   volumes:
  #     #GOOD: created a named volume so our data is kept between docker-compose ups
  #     - mongo3:/data/db
  #   # networks:
  #   #   - mongo-dev-net
  #   ports:
  #     - "30003:27017"
  #   command: mongod --port 30003
  #   # command: mongod --smallfiles --logpath=/dev/null # --quiet
  #   entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "devrs" ]

volumes:
  mongo1:
  mongo2:
  mongo3:

# networks:
#   mongo-dev-net: