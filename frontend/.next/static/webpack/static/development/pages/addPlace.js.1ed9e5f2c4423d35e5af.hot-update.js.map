{"version":3,"file":"static/webpack/static/development/pages/addPlace.js.1ed9e5f2c4423d35e5af.hot-update.js","sources":["webpack:///./components/Input.js"],"sourcesContent":["import React from \"react\";\nimport {validate} from '../utils/validators'\n\nconst Input = ({ type = \"text\", placeholder = \"\", name, icon = null, validators }) => {\n  const inputReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE\":\n        return {\n          ...state,\n          value: action.val,\n          isValid: validate(action.val, action.validators),\n        };\n      \n      case 'TOUCH':\n        return{...state, isTouched: true}\n      default:\n        return state;\n    }\n  };\n\n  const [inputState, dispatch] = React.useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n    isTouched: false\n  });\n\n  const handleChange = (e) => {\n    dispatch({ type: \"CHANGE\", val: e.target.value, validators });\n  };\n  const handleBlur = (e) => {\n    dispatch({ type: \"TOUCH\"});\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{name}</label>\n      <div className={`control ${icon && \"has-icons-left\"}`}>\n        {type === \"textarea\" ? (\n          <textarea\n            className={`textarea ${!inputState.isValid && inputState.isTouched && 'is-danger'}`}\n            placeholder={placeholder}\n            onChange={handleChange}\n            value={inputState.value}\n            onBlur={handleBlur}\n          ></textarea>\n        ) : (\n          <input\n            className={`input ${!inputState.isValid && inputState.isTouched && 'is-danger'}`}\n            type={type}\n            placeholder={placeholder}\n            onChange={handleChange}\n            value={inputState.value}\n            onBlur={handleBlur}\n          />\n        )}\n        {icon && (\n          <span className=\"icon is-small is-left\">\n            <i className={`fas ${icon}`}></i>\n          </span>\n        )}\n      </div>\n      {!inputState.isValid && inputState.isTouched && (\n        <p className=\"help is-danger\">This {name} is invalid</p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAXA;AAaA;AACA;AAhBA;AAkBA;AACA;AACA;AAHA;AAjBA;AAAA;AAAA;AACA;AAsBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}