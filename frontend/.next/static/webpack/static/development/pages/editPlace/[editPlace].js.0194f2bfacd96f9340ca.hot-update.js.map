{"version":3,"file":"static/webpack/static/development/pages/editPlace/[editPlace].js.0194f2bfacd96f9340ca.hot-update.js","sources":["webpack:///./pages/editPlace/[editPlace].js"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\nimport { useForm } from \"../../hooks/useForm\";\nimport Link from 'next/link'\n\nconst editPlace = (findPlace) => {\n  const router = useRouter()\n  console.log(findPlace)\n  // console.log(router)\n  // const [formState, inputHandler] = useForm(\n  //   {\n  //     title: {\n  //       value: findPlace.title,\n  //       isValid: true,\n  //     },\n  //     description: {\n  //       value: findPlace.description,\n  //       isValid: true,\n  //     },\n  //     address: {\n  //       value: findPlace.address,\n  //       isValid: true,\n  //     },\n  //   },\n  //   true\n  // );\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(formState.inputs);\n  // };\n  return (\n    <Layout title=\"Edit Place\" subtitle=\"form to update an existing place\">\n      {/* {findPlace ? (\n        <form onSubmit={handleSubmit}>\n          <Input\n            id=\"title\"\n            name=\"Title\"\n            placeholder=\"Name of the place\"\n            icon=\"fa-landmark\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.inputs.title.value}\n            valid={formState.inputs.title.isValid}\n          />\n          <Input\n            id=\"description\"\n            name=\"Description\"\n            type=\"textarea\"\n            placeholder=\"About the place\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            value={formState.inputs.description.value}\n            valid={formState.inputs.description.isValid}\n          />\n          <Input\n            id=\"address\"\n            name=\"Address\"\n            placeholder=\"address\"\n            icon=\"fa-map-marked-alt\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.inputs.address.value}\n            valid={formState.inputs.address.isValid}\n          />\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                className=\"button is-primary\"\n                disabled={!formState.isValid}\n              >\n                Update\n              </button>\n            </div>\n            <p className=\"control\">\n              \n              <a onClick={()=>router.back()} className=\"button is-light\">Cancel</a>\n            </p>\n          </div>\n        </form>\n      ) : (\n        <p>error, could not find the place</p>\n      )} */}\n    </Layout>\n  );\n};\nexport async function getStaticPaths(){\n  // console.log(ctx)\n  return { paths:[{params:{editPlace:'p1'}}], fallback: false }\n  }\nexport async function getStaticProps({params}) {\n  \n  const findPlace = places.find((place) => place.id === params.editPlace);\n\n  return {\n    props: findPlace\n  }\n};\n\n\nexport default editPlace;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDA;AACA;AAWA;;AAGA;;;;A","sourceRoot":""}