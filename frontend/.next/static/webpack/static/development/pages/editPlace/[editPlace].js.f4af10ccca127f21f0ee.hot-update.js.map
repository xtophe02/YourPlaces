{"version":3,"file":"static/webpack/static/development/pages/editPlace/[editPlace].js.f4af10ccca127f21f0ee.hot-update.js","sources":["webpack:///./data.js","webpack:///./pages/editPlace/[editPlace].js"],"sourcesContent":["exports.users = [\n  {\n    id: \"u1\",\n    name: \"Christophe\",\n    places: 2,\n    image:\n      \"https://images.unsplash.com/photo-1552072805-2a9039d00e57?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n  },\n  {\n    id: \"u2\",\n    name: \"Idalia\",\n    places: 1,\n    image:\n      \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n  },\n  {\n    id: \"u3\",\n    name: \"Nicole\",\n    places: 3,\n    image:\n      \"https://images.unsplash.com/photo-1554151228-14d9def656e4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n  },\n  {\n    id: \"u4\",\n    name: \"Noah\",\n    places: 4,\n    image:\n      \"https://images.unsplash.com/photo-1544723795-3fb6469f5b39?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n  }\n];\n\nexports.places = [\n  {\n    id:'p1',\n    title: 'Empire State Building',\n    description: 'One of the most famous sky scrapers in the world!',\n    imageUrl: 'https://images.unsplash.com/photo-1550664890-c5e34a6cad31?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n    address: '20 W 34th St, New York, NY 10001',\n    location:{\n      lat: 40.7484405,\n      lng: -73.9878584\n    },\n    creator: 'u1'\n  },\n  {\n    id:'p2',\n    title: 'Empire State Building',\n    description: 'One of the most famous sky scrapers in the world!',\n    imageUrl: 'https://images.unsplash.com/photo-1543969082-0d5eb654c698?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n    address: '20 W 34th St, New York, NY 10001',\n    location:{\n      lat: 40.7484405,\n      lng: -73.9878584\n    },\n    creator: 'u2'\n  },\n  {\n    id:'p3',\n    title: 'Eiffel Tower',\n    description: \"Constructed from 1887 to 1889 as the entrance to the 1889 World's Fair, it was initially criticised by some of France's leading artists and intellectuals for its design, but it has become a global cultural icon of France and one of the most recognisable structures in the world. The Eiffel Tower is the most-visited paid monument in the world; 6.91 million people ascended it in 2015. \",\n    imageUrl: 'https://images.unsplash.com/photo-1549271456-0c1e6f59ab66?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n    address: 'Champ de Mars, 5 Avenue Anatole France, 75007 Paris, France',\n    location:{\n      lat: 48.8539241,\n      lng: 2.2913515\n    },\n    creator: 'u2'\n  },\n\n]","import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\nimport { useForm } from \"../../hooks/useForm\";\nimport Link from 'next/link'\n\nconst editPlace = ({findPlace}) => {\n  const router = useRouter()\n  console.log(findPlace)\n  // console.log(router)\n  // const [formState, inputHandler] = useForm(\n  //   {\n  //     title: {\n  //       value: findPlace.title,\n  //       isValid: true,\n  //     },\n  //     description: {\n  //       value: findPlace.description,\n  //       isValid: true,\n  //     },\n  //     address: {\n  //       value: findPlace.address,\n  //       isValid: true,\n  //     },\n  //   },\n  //   true\n  // );\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(formState.inputs);\n  // };\n  return (\n    <Layout title=\"Edit Place\" subtitle=\"form to update an existing place\">\n      {/* {findPlace ? (\n        <form onSubmit={handleSubmit}>\n          <Input\n            id=\"title\"\n            name=\"Title\"\n            placeholder=\"Name of the place\"\n            icon=\"fa-landmark\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.inputs.title.value}\n            valid={formState.inputs.title.isValid}\n          />\n          <Input\n            id=\"description\"\n            name=\"Description\"\n            type=\"textarea\"\n            placeholder=\"About the place\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            value={formState.inputs.description.value}\n            valid={formState.inputs.description.isValid}\n          />\n          <Input\n            id=\"address\"\n            name=\"Address\"\n            placeholder=\"address\"\n            icon=\"fa-map-marked-alt\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.inputs.address.value}\n            valid={formState.inputs.address.isValid}\n          />\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                className=\"button is-primary\"\n                disabled={!formState.isValid}\n              >\n                Update\n              </button>\n            </div>\n            <p className=\"control\">\n              \n              <a onClick={()=>router.back()} className=\"button is-light\">Cancel</a>\n            </p>\n          </div>\n        </form>\n      ) : (\n        <p>error, could not find the place</p>\n      )} */}\n    </Layout>\n  );\n};\n// export async function getStaticPaths(){\n  \n//   return { paths:[{params:editPlace}], fallback: false }\n//   }\n// export async function getStaticProps({params}) {\n  \n//   const findPlace = places.find((place) => place.id === params.editPlace);\n\n//   return {\n//     props: findPlace\n//   }\n// };\n\neditPlace.getInitialProps = ({query}) => {\n  const findPlace = places.find((place) => place.id === params.editPlace);\n  return findPlace\n}\n\nexport default editPlace;\n"],"mappings":";;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAJA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}