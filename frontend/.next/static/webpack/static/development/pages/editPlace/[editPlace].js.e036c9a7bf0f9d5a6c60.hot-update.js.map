{"version":3,"file":"static/webpack/static/development/pages/editPlace/[editPlace].js.e036c9a7bf0f9d5a6c60.hot-update.js","sources":["webpack:///./pages/editPlace/[editPlace].js"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\nimport { useForm } from \"../../hooks/useForm\";\n\nconst editPlace = ({ findPlace }) => {\n  console.log(findPlace)\n  // const [formState, inputHandler] = useForm(\n  //   {\n  //     title: {\n  //       value: findPlace.title,\n  //       isValid: true,\n  //     },\n  //     description: {\n  //       value: findPlace.description,\n  //       isValid: true,\n  //     },\n  //     address: {\n  //       value: findPlace.address,\n  //       isValid: true,\n  //     },\n  //   },\n  //   true\n  // );\n\n  return (\n    <Layout title=\"Edit Place\" subtitle=\"form to update an existing place\">\n     {/* {findPlace ? (\n        <>\n           <Input\n            id=\"title\"\n            name=\"Title\"\n            placeholder=\"Name of the place\"\n            icon=\"fa-landmark\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.inputs.title.value}\n            valid={formState.inputs.title.isValid}\n          />\n          <Input\n            id=\"description\"\n            name=\"Description\"\n            type=\"textarea\"\n            placeholder=\"About the place\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            value={formState.inputs.description.value}\n            valid={formState.inputs.description.isValid}\n          />\n          <Input\n            id=\"address\"\n            name=\"Address\"\n            placeholder=\"address\"\n            icon=\"fa-map-marked-alt\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.inputs.address.value}\n            valid={formState.inputs.address.isValid}\n          />\n          <div className=\"control\">\n            <button className=\"button is-primary\" disabled={true}>\n              Update\n            </button>\n          </div>\n        </> */}\n      ) : (\n        <p>error, could not find the place</p>\n      )}\n    </Layout>\n  );\n};\n\neditPlace.getInitialProps = ({ query }) => {\n  \n  return places.find((place) => place.id === router.query.editPlace);\n  \n};\n\nexport default editPlace;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;;;;A","sourceRoot":""}