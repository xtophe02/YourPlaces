{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/app/components/Input.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { validate } from \"../utils/validators\";\n\nvar Input = function Input(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"text\" : _ref$type,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? \"\" : _ref$placeholder,\n      name = _ref.name,\n      _ref$icon = _ref.icon,\n      icon = _ref$icon === void 0 ? null : _ref$icon,\n      validators = _ref.validators,\n      id = _ref.id,\n      onInput = _ref.onInput;\n\n  var inputReducer = function inputReducer(state, action) {\n    switch (action.type) {\n      case \"CHANGE\":\n        return _objectSpread({}, state, {\n          value: action.val,\n          isValid: validate(action.val, action.validators)\n        });\n\n      case \"TOUCH\":\n        return _objectSpread({}, state, {\n          isTouched: true\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _React$useReducer = React.useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n    isTouched: false\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      inputState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var handleChange = function handleChange(e) {\n    dispatch({\n      type: \"CHANGE\",\n      val: e.target.value,\n      validators: validators\n    });\n  };\n\n  var handleBlur = function handleBlur(e) {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  React, useEffect(function () {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  return __jsx(\"div\", {\n    className: \"field\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    className: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, name), __jsx(\"div\", {\n    className: \"control \".concat(icon && \"has-icons-left\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, type === \"textarea\" ? __jsx(\"textarea\", {\n    id: id,\n    className: \"textarea \".concat(!inputState.isValid && inputState.isTouched && \"is-danger\"),\n    placeholder: placeholder,\n    onChange: handleChange,\n    value: inputState.value,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }) : __jsx(\"input\", {\n    className: \"input \".concat(!inputState.isValid && inputState.isTouched && \"is-danger\"),\n    id: id,\n    type: type,\n    placeholder: placeholder,\n    onChange: handleChange,\n    value: inputState.value,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), icon && __jsx(\"span\", {\n    className: \"icon is-small is-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"fas \".concat(icon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }))), !inputState.isValid && inputState.isTouched && __jsx(\"p\", {\n    className: \"help is-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"This \", name, \" is invalid\"));\n};\n\nexport default Input;","map":{"version":3,"sources":["/app/components/Input.js"],"names":["React","validate","Input","type","placeholder","name","icon","validators","id","onInput","inputReducer","state","action","value","val","isValid","isTouched","useReducer","inputState","dispatch","handleChange","e","target","handleBlur","useEffect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { validate } from \"../utils/validators\";\n\nconst Input = ({\n  type = \"text\",\n  placeholder = \"\",\n  name,\n  icon = null,\n  validators,\n  id,\n  onInput\n}) => {\n  const inputReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE\":\n        return {\n          ...state,\n          value: action.val,\n          isValid: validate(action.val, action.validators),\n        };\n\n      case \"TOUCH\":\n        return { ...state, isTouched: true };\n      default:\n        return state;\n    }\n  };\n\n  const [inputState, dispatch] = React.useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n    isTouched: false,\n  });\n\n  const handleChange = (e) => {\n    dispatch({ type: \"CHANGE\", val: e.target.value, validators });\n  };\n  const handleBlur = (e) => {\n    dispatch({ type: \"TOUCH\" });\n  };\n\n  React,useEffect(() => {\n    onInput(id,value,isValid)\n    \n  }, [id,value,isValid,onInput])\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{name}</label>\n      <div className={`control ${icon && \"has-icons-left\"}`}>\n        {type === \"textarea\" ? (\n          <textarea\n          id={id}\n            className={`textarea ${\n              !inputState.isValid && inputState.isTouched && \"is-danger\"\n            }`}\n            placeholder={placeholder}\n            onChange={handleChange}\n            value={inputState.value}\n            onBlur={handleBlur}\n          ></textarea>\n        ) : (\n          <input\n            className={`input ${\n              !inputState.isValid && inputState.isTouched && \"is-danger\"\n            }`}\n            id={id}\n            type={type}\n            placeholder={placeholder}\n            onChange={handleChange}\n            value={inputState.value}\n            onBlur={handleBlur}\n          />\n        )}\n        {icon && (\n          <span className=\"icon is-small is-left\">\n            <i className={`fas ${icon}`}></i>\n          </span>\n        )}\n      </div>\n      {!inputState.isValid && inputState.isTouched && (\n        <p className=\"help is-danger\">This {name} is invalid</p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}