{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/app/components/Input.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { validate } from '../utils/validators';\n\nvar Input = function Input(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"text\" : _ref$type,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? \"\" : _ref$placeholder,\n      name = _ref.name,\n      _ref$icon = _ref.icon,\n      icon = _ref$icon === void 0 ? null : _ref$icon,\n      validators = _ref.validators;\n\n  var inputReducer = function inputReducer(state, action) {\n    switch (action.type) {\n      case \"CHANGE\":\n        return _objectSpread({}, state, {\n          value: action.val,\n          isValid: validate(action.val, action.validators)\n        });\n\n      case 'TOUCH':\n        return _objectSpread({}, state, {\n          isTouched: true\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _React$useReducer = React.useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n    isTouched: false\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      inputState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var handleChange = function handleChange(e) {\n    dispatch({\n      type: \"CHANGE\",\n      val: e.target.value,\n      validators: validators\n    });\n  };\n\n  var handleBlur = function handleBlur(e) {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"field\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    className: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, name), __jsx(\"div\", {\n    className: \"control \".concat(icon && \"has-icons-left\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, type === \"textarea\" ? __jsx(\"textarea\", {\n    className: \"textarea \".concat(!inputState.isValid && inputState.isTouched && 'is-danger'),\n    placeholder: placeholder,\n    onChange: handleChange,\n    value: inputState.value,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }) : __jsx(\"input\", {\n    className: \"input \".concat(!inputState.isValid && inputState.isTouched && 'is-danger'),\n    type: type,\n    placeholder: placeholder,\n    onChange: handleChange,\n    value: inputState.value,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), icon && __jsx(\"span\", {\n    className: \"icon is-small is-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"fas \".concat(icon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }))), !inputState.isValid && inputState.isTouched && __jsx(\"p\", {\n    className: \"help is-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"This \", name, \" is invalid\"));\n};\n\nexport default Input;","map":{"version":3,"sources":["/app/components/Input.js"],"names":["React","validate","Input","type","placeholder","name","icon","validators","inputReducer","state","action","value","val","isValid","isTouched","useReducer","inputState","dispatch","handleChange","e","target","handleBlur"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {validate} from '../utils/validators'\n\nconst Input = ({ type = \"text\", placeholder = \"\", name, icon = null, validators }) => {\n  const inputReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE\":\n        return {\n          ...state,\n          value: action.val,\n          isValid: validate(action.val, action.validators),\n        };\n      \n      case 'TOUCH':\n        return{...state, isTouched: true}\n      default:\n        return state;\n    }\n  };\n\n  const [inputState, dispatch] = React.useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n    isTouched: false\n  });\n\n  const handleChange = (e) => {\n    dispatch({ type: \"CHANGE\", val: e.target.value, validators });\n  };\n  const handleBlur = (e) => {\n    dispatch({ type: \"TOUCH\"});\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{name}</label>\n      <div className={`control ${icon && \"has-icons-left\"}`}>\n        {type === \"textarea\" ? (\n          <textarea\n            className={`textarea ${!inputState.isValid && inputState.isTouched && 'is-danger'}`}\n            placeholder={placeholder}\n            onChange={handleChange}\n            value={inputState.value}\n            onBlur={handleBlur}\n          ></textarea>\n        ) : (\n          <input\n            className={`input ${!inputState.isValid && inputState.isTouched && 'is-danger'}`}\n            type={type}\n            placeholder={placeholder}\n            onChange={handleChange}\n            value={inputState.value}\n            onBlur={handleBlur}\n          />\n        )}\n        {icon && (\n          <span className=\"icon is-small is-left\">\n            <i className={`fas ${icon}`}></i>\n          </span>\n        )}\n      </div>\n      {!inputState.isValid && inputState.isTouched && (\n        <p className=\"help is-danger\">This {name} is invalid</p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}