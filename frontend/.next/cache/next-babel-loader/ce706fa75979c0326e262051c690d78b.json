{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/app/pages/editPlace/[editPlace].js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\n\nvar editPlace = function editPlace() {\n  var router, findPlace;\n  return _regeneratorRuntime.async(function editPlace$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          router = useRouter();\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(places.find(function (place) {\n            return place.id === router.query.editPlace;\n          }));\n\n        case 3:\n          findPlace = _context.sent;\n          return _context.abrupt(\"return\", __jsx(Layout, {\n            title: \"Edit Place\",\n            subtitle: \"form to update an existing place\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 5\n            }\n          }, !findPlace && __jsx(\"p\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 22\n            }\n          }, \"error, could not find the place\"), __jsx(Input, {\n            id: \"title\",\n            name: \"Title\",\n            placeholder: \"Name of the place\",\n            icon: \"fa-landmark\",\n            onInput: function onInput() {},\n            validators: [VALIDATOR_REQUIRE()],\n            value: findPlace.title,\n            valid: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 7\n            }\n          }), __jsx(Input, {\n            id: \"description\",\n            name: \"Description\",\n            type: \"textarea\",\n            placeholder: \"About the place\",\n            onInput: function onInput() {},\n            validators: [VALIDATOR_MINLENGTH(5)] // value={findPlace.description}\n            ,\n            valid: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }\n          }), __jsx(Input, {\n            id: \"address\",\n            name: \"Address\",\n            placeholder: \"address\",\n            icon: \"fa-map-marked-alt\",\n            onInput: function onInput() {},\n            validators: [VALIDATOR_REQUIRE()] // value={findPlace.address}\n            ,\n            valid: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 7\n            }\n          }), __jsx(\"div\", {\n            className: \"control\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 7\n            }\n          }, __jsx(\"button\", {\n            className: \"button is-primary\",\n            disabled: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }\n          }, \"Update\"))));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default editPlace;","map":{"version":3,"sources":["/app/pages/editPlace/[editPlace].js"],"names":["React","Layout","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useRouter","places","editPlace","router","find","place","id","query","findPlace","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,wBAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,UAAAA,MADU,GACDH,SAAS,EADR;AAAA;AAAA,2CAEQC,MAAM,CAACG,IAAP,CACtB,UAACC,KAAD;AAAA,mBAAWA,KAAK,CAACC,EAAN,KAAaH,MAAM,CAACI,KAAP,CAAaL,SAArC;AAAA,WADsB,CAFR;;AAAA;AAEVM,UAAAA,SAFU;AAAA,2CAOd,MAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,YAAd;AAA2B,YAAA,QAAQ,EAAC,kCAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,CAACA,SAAD,IAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADjB,EAEE,MAAC,KAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,WAAW,EAAC,mBAHd;AAIE,YAAA,IAAI,EAAC,aAJP;AAKE,YAAA,OAAO,EAAE,mBAAI,CAAE,CALjB;AAME,YAAA,UAAU,EAAE,CAACV,iBAAiB,EAAlB,CANd;AAOE,YAAA,KAAK,EAAEU,SAAS,CAACC,KAPnB;AAQE,YAAA,KAAK,EAAE,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAYQ,MAAC,KAAD;AACJ,YAAA,EAAE,EAAC,aADC;AAEJ,YAAA,IAAI,EAAC,aAFD;AAGJ,YAAA,IAAI,EAAC,UAHD;AAIJ,YAAA,WAAW,EAAC,iBAJR;AAKJ,YAAA,OAAO,EAAE,mBAAI,CAAE,CALX;AAMJ,YAAA,UAAU,EAAE,CAACV,mBAAmB,CAAC,CAAD,CAApB,CANR,CAOJ;AAPI;AAQJ,YAAA,KAAK,EAAE,IARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZR,EAsBE,MAAC,KAAD;AACE,YAAA,EAAE,EAAC,SADL;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,WAAW,EAAC,SAHd;AAIE,YAAA,IAAI,EAAC,mBAJP;AAKE,YAAA,OAAO,EAAE,mBAAI,CAAE,CALjB;AAME,YAAA,UAAU,EAAE,CAACD,iBAAiB,EAAlB,CANd,CAOE;AAPF;AAQE,YAAA,KAAK,EAAE,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,EAgCE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAsC,YAAA,QAAQ,EAAE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAhCF,CAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAgDA,eAAeI,SAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\n\nconst editPlace = async () =>{\n  const router = useRouter();\n  const findPlace = await places.find(\n    (place) => place.id === router.query.editPlace\n  );\n  \n  return (\n    <Layout title=\"Edit Place\" subtitle=\"form to update an existing place\">\n      {!findPlace && <p>error, could not find the place</p>}\n      <Input\n        id=\"title\"\n        name=\"Title\"\n        placeholder=\"Name of the place\"\n        icon=\"fa-landmark\"\n        onInput={()=>{}}\n        validators={[VALIDATOR_REQUIRE()]}\n        value={findPlace.title}\n        valid={true}\n      />\n            <Input\n        id=\"description\"\n        name=\"Description\"\n        type=\"textarea\"\n        placeholder=\"About the place\"\n        onInput={()=>{}}\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        // value={findPlace.description}\n        valid={true}\n      />\n      <Input\n        id=\"address\"\n        name=\"Address\"\n        placeholder=\"address\"\n        icon=\"fa-map-marked-alt\"\n        onInput={()=>{}}\n        validators={[VALIDATOR_REQUIRE()]}\n        // value={findPlace.address}\n        valid={true}\n      />\n      <div className=\"control\">\n        <button className=\"button is-primary\" disabled={true}>\n          Update\n        </button>\n      </div>\n    </Layout>\n  );\n}\n\nexport default editPlace;\n"]},"metadata":{},"sourceType":"module"}