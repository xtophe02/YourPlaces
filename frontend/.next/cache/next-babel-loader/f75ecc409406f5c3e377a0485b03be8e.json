{"ast":null,"code":"function _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nvar VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nvar VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nvar VALIDATOR_TYPE_MIN = 'MIN';\nvar VALIDATOR_TYPE_MAX = 'MAX';\nvar VALIDATOR_TYPE_EMAIL = 'EMAIL';\nvar VALIDATOR_TYPE_FILE = 'FILE';\nexport var VALIDATOR_REQUIRE = function VALIDATOR_REQUIRE() {\n  return {\n    type: VALIDATOR_TYPE_REQUIRE\n  };\n};\nexport var VALIDATOR_FILE = function VALIDATOR_FILE() {\n  return {\n    type: VALIDATOR_TYPE_FILE\n  };\n};\nexport var VALIDATOR_MINLENGTH = function VALIDATOR_MINLENGTH(val) {\n  return {\n    type: VALIDATOR_TYPE_MINLENGTH,\n    val: val\n  };\n};\nexport var VALIDATOR_MAXLENGTH = function VALIDATOR_MAXLENGTH(val) {\n  return {\n    type: VALIDATOR_TYPE_MAXLENGTH,\n    val: val\n  };\n};\nexport var VALIDATOR_MIN = function VALIDATOR_MIN(val) {\n  return {\n    type: VALIDATOR_TYPE_MIN,\n    val: val\n  };\n};\nexport var VALIDATOR_MAX = function VALIDATOR_MAX(val) {\n  return {\n    type: VALIDATOR_TYPE_MAX,\n    val: val\n  };\n};\nexport var VALIDATOR_EMAIL = function VALIDATOR_EMAIL() {\n  return {\n    type: VALIDATOR_TYPE_EMAIL\n  };\n};\nexport var validate = function validate(value, validators) {\n  var isValid = true;\n\n  var _iterator = _createForOfIteratorHelper(validators),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var validator = _step.value;\n\n      if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n        isValid = isValid && value.trim().length > 0;\n      }\n\n      if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n        isValid = isValid && value.trim().length >= validator.val;\n      }\n\n      if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n        isValid = isValid && value.trim().length <= validator.val;\n      }\n\n      if (validator.type === VALIDATOR_TYPE_MIN) {\n        isValid = isValid && +value >= validator.val;\n      }\n\n      if (validator.type === VALIDATOR_TYPE_MAX) {\n        isValid = isValid && +value <= validator.val;\n      }\n\n      if (validator.type === VALIDATOR_TYPE_EMAIL) {\n        isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["/app/utils/validotors.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MIN","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_FILE","VALIDATOR_REQUIRE","type","VALIDATOR_FILE","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_MIN","VALIDATOR_MAX","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test"],"mappings":"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","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"]},"metadata":{},"sourceType":"module"}