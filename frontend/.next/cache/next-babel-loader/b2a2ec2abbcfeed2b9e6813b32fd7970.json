{"ast":null,"code":"var _jsxFileName = \"/app/components/Input.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\n\nconst Input = ({\n  type = \"text\",\n  placeholder = \"\",\n  name,\n  icon = null\n}) => {\n  const inputReducer = (state, action) => {\n    switch (action.type) {\n      case 'CHANGE':\n        return _objectSpread({}, state, {\n          value: action.val,\n          isValid: true\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  React.useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const handleChange = e => {};\n\n  return __jsx(\"div\", {\n    class: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, name), __jsx(\"div\", {\n    className: `control ${icon && 'has-icons-left'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, type === \"textarea\" ? __jsx(\"textarea\", {\n    className: \"textarea\",\n    placeholder: placeholder,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }) : __jsx(\"input\", {\n    className: \"input\",\n    type: type,\n    placeholder: placeholder,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), icon && __jsx(\"span\", {\n    className: \"icon is-small is-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: `fas ${icon}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Input;","map":{"version":3,"sources":["/app/components/Input.js"],"names":["React","Input","type","placeholder","name","icon","inputReducer","state","action","value","val","isValid","useReducer","handleChange","e"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,MAAT;AAAiBC,EAAAA,WAAW,GAAG,EAA/B;AAAmCC,EAAAA,IAAnC;AAAyCC,EAAAA,IAAI,GAAG;AAAhD,CAAD,KAA4D;AAExE,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,YAAOA,MAAM,CAACN,IAAd;AACE,WAAK,QAAL;AACE,iCACKK,KADL;AAEEE,UAAAA,KAAK,EAAED,MAAM,CAACE,GAFhB;AAGEC,UAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,eAAOJ,KAAP;AARJ;AAUD,GAXD;;AAaAP,EAAAA,KAAK,CAACY,UAAN,CAAiBN,YAAjB,EAA+B;AAACG,IAAAA,KAAK,EAAC,EAAP;AAAWE,IAAAA,OAAO,EAAE;AAApB,GAA/B;;AAEA,QAAME,YAAY,GAAGC,CAAC,IAAI,CAEzB,CAFD;;AAIA,SACE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BV,IAA1B,CADF,EAEE;AAAK,IAAA,SAAS,EAAG,WAAUC,IAAI,IAAI,gBAAiB,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,KAAK,UAAT,GACC;AAAU,IAAA,SAAS,EAAC,UAApB;AAA+B,IAAA,WAAW,EAAEC,WAA5C;AAAyD,IAAA,QAAQ,EAAEU,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAEX,IAA/B;AAAqC,IAAA,WAAW,EAAEC,WAAlD;AAA+D,IAAA,QAAQ,EAAEU,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMGR,IAAI,IACH;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAG,OAAMA,IAAK,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,CAFF,CADF;AAiBD,CAtCD;;AAwCA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\n\nconst Input = ({ type = \"text\", placeholder = \"\", name, icon = null }) => {\n\n  const inputReducer = (state, action) => {\n    switch(action.type) {\n      case 'CHANGE':\n        return {\n          ...state,\n          value: action.val,\n          isValid: true\n        };\n      default:\n        return state\n    }\n  }\n\n  React.useReducer(inputReducer, {value:'', isValid: false})\n\n  const handleChange = e => {\n\n  }\n\n  return (\n    <div class=\"field\">\n      <label className=\"label\">{name}</label>\n      <div className={`control ${icon && 'has-icons-left'}`}>\n        {type === \"textarea\" ? (\n          <textarea className=\"textarea\" placeholder={placeholder} onChange={handleChange}/>\n        ) : (\n          <input className=\"input\" type={type} placeholder={placeholder} onChange={handleChange}/>\n        )}\n        {icon && (\n          <span className=\"icon is-small is-left\">\n            <i className={`fas ${icon}`}></i>\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}