{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/app/pages/editPlace/[editPlace].js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { withRouter } from 'next/router';\n\nvar editPlace = function editPlace(_ref) {\n  var findPlace = _ref.findPlace;\n  console.log(findPlace); // const [formState, inputHandler] = useForm(\n  //   {\n  //     title: {\n  //       value: findPlace.title ,\n  //       isValid: true,\n  //     },\n  //     description: {\n  //       value: findPlace.description ,\n  //       isValid: true,\n  //     },\n  //     address: {\n  //       value: findPlace.address ,\n  //       isValid: true,\n  //     },\n  //   },\n  //   true\n  // );\n\n  return __jsx(Layout, {\n    title: \"Edit Place\",\n    subtitle: \"form to update an existing place\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, findPlace ? __jsx(React.Fragment, null) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"error, could not find the place\"));\n};\n\neditPlace.getInitialProps = function (props) {\n  // const router = useRouter();\n  // const findPlace = places.find((place) => place.id === router.query.editPlace);\n  // console.log(findPlace)\n  console.log(props.router.query);\n  return {\n    findPlace: null\n  };\n};\n\nexport default withRouter(editPlace);","map":{"version":3,"sources":["/app/pages/editPlace/[editPlace].js"],"names":["React","Layout","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useRouter","places","useForm","withRouter","editPlace","findPlace","console","log","getInitialProps","props","router","query"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,wBAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EADmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAA2B,IAAA,QAAQ,EAAC,kCAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,GACR,2BADQ,GAuCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAxCJ,CADF;AA6CD,CAjED;;AAkEAD,SAAS,CAACI,eAAV,GAA8B,UAACC,KAAD,EAAU;AACtC;AACA;AACA;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,SAAO;AAACN,IAAAA,SAAS,EAAC;AAAX,GAAP;AACD,CAND;;AAOA,eAAeF,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { withRouter } from 'next/router'\n\nconst editPlace = ({ findPlace }) => {\n  console.log(findPlace);\n  // const [formState, inputHandler] = useForm(\n  //   {\n  //     title: {\n  //       value: findPlace.title ,\n  //       isValid: true,\n  //     },\n  //     description: {\n  //       value: findPlace.description ,\n  //       isValid: true,\n  //     },\n  //     address: {\n  //       value: findPlace.address ,\n  //       isValid: true,\n  //     },\n  //   },\n  //   true\n  // );\n\n  return (\n    <Layout title=\"Edit Place\" subtitle=\"form to update an existing place\">\n      {findPlace ? (\n        <>\n          {/* <Input\n            id=\"title\"\n            name=\"Title\"\n            placeholder=\"Name of the place\"\n            icon=\"fa-landmark\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.title.value}\n            valid={formState.title.isValid}\n          />\n          <Input\n            id=\"description\"\n            name=\"Description\"\n            type=\"textarea\"\n            placeholder=\"About the place\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            value={formState.description.value}\n            valid={formState.description.isValid}\n          />\n          <Input\n            id=\"address\"\n            name=\"Address\"\n            placeholder=\"address\"\n            icon=\"fa-map-marked-alt\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.address.value}\n            valid={formState.address.isValid}\n          />\n          <div className=\"control\">\n            <button className=\"button is-primary\" disabled={true}>\n              Update\n            </button>\n          </div> */}\n        </>\n      ) : (\n        <p>error, could not find the place</p>\n      )}\n    </Layout>\n  );\n};\neditPlace.getInitialProps =   (props)=> {\n  // const router = useRouter();\n  // const findPlace = places.find((place) => place.id === router.query.editPlace);\n  // console.log(findPlace)\n  console.log(props.router.query)\n  return {findPlace:null};\n};\nexport default withRouter(editPlace);\n"]},"metadata":{},"sourceType":"module"}