{"ast":null,"code":"var _jsxFileName = \"/app/pages/editPlace/[editPlace].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\nimport { useForm } from \"../hooks/useForm\";\n\nconst editPlace = () => {\n  const router = useRouter();\n  const findPlace = places.find(place => place.id === router.query.editPlace);\n  const {\n    title,\n    description,\n    address\n  } = findPlace;\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: title,\n      isValid: true\n    },\n    description: {\n      value: description,\n      isValid: true\n    },\n    address: {\n      value: address,\n      isValid: true\n    }\n  }, true);\n  return __jsx(Layout, {\n    title: \"Edit Place\",\n    subtitle: \"form to update an existing place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, findPlace ? __jsx(React.Fragment, null, __jsx(Input, {\n    id: \"title\",\n    name: \"Title\",\n    placeholder: \"Name of the place\",\n    icon: \"fa-landmark\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    value: formState.title.value,\n    valid: formState.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    id: \"description\",\n    name: \"Description\",\n    type: \"textarea\",\n    placeholder: \"About the place\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_MINLENGTH(5)],\n    value: formState.description.value,\n    valid: formState.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    id: \"address\",\n    name: \"Address\",\n    placeholder: \"address\",\n    icon: \"fa-map-marked-alt\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    value: formState.address.value,\n    valid: formState.address.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"button is-primary\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Update\"))) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"error, could not find the place\"));\n};\n\nexport default editPlace;","map":{"version":3,"sources":["/app/pages/editPlace/[editPlace].js"],"names":["React","Layout","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useRouter","places","useForm","editPlace","router","findPlace","find","place","id","query","title","description","address","formState","inputHandler","value","isValid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../utils/validators\";\nimport { useRouter } from \"next/router\";\nimport { places } from \"../../data\";\nimport { useForm } from \"../hooks/useForm\";\n\nconst editPlace = () => {\n  const router = useRouter();\n  const findPlace = places.find((place) => place.id === router.query.editPlace);\n\n  const {title, description, address} = findPlace\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: title,\n        isValid: true,\n      },\n      description: {\n        value: description,\n        isValid: true,\n      },\n      address: {\n        value: address,\n        isValid: true,\n      },\n    },\n    true\n  );\n\n  \n  return (\n    <Layout title=\"Edit Place\" subtitle=\"form to update an existing place\">\n      {findPlace ? (\n        <>\n          <Input\n            id=\"title\"\n            name=\"Title\"\n            placeholder=\"Name of the place\"\n            icon=\"fa-landmark\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.title.value}\n            valid={formState.title.isValid}\n          />\n          <Input\n            id=\"description\"\n            name=\"Description\"\n            type=\"textarea\"\n            placeholder=\"About the place\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            value={formState.description.value}\n            valid={formState.description.isValid}\n          />\n          <Input\n            id=\"address\"\n            name=\"Address\"\n            placeholder=\"address\"\n            icon=\"fa-map-marked-alt\"\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            value={formState.address.value}\n            valid={formState.address.isValid}\n          />\n          <div className=\"control\">\n            <button className=\"button is-primary\" disabled={true}>\n              Update\n            </button>\n          </div>\n        </>\n      ) : (\n        <p>error, could not find the place</p>\n      )}\n    </Layout>\n  );\n};\n\nexport default editPlace;\n"]},"metadata":{},"sourceType":"module"}